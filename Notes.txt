
https://www.chess.com/news/view/published-data-api

I would investigate the query for current games.
I'd like to know whether somebody played a time game within a recent limit.
And then display -

a) bullet if playing bullet,
b) blitz if playing blitz,
c) ...,
d) o/w last login

https://api.chess.com/pub/player/nickemmerson/games/2022/03

And the result is, from the most recent last game within this time limit,

a) did they win?
b) did both/them/opponent/neither lose their queen?

And display a picture to show this.

And then after this I would put a pin in this task.




From PGN parsing : (properties)

turn: 'w' | 'b'
moveNumber: number

notation: object | string
	check: string				# -> checkmate, + -> check
	col: string					a to h	(file)
	fig: string					the piece, blank (pawn), N (knight), B (bishop), Q (queen), K (king), R (rook)
	notation: string		needed?
	promotion: string		=Q means queen promotion
	row: string					1 to 8	(rank)	
	strike: string			x means piece taken

special case: castling, notation is string "O-O" | "O-O-O", check property can be populated

special case: "Qh5-f3+" is the notation where double-qualification is required
For now, discard this case and throw exception!

turn: white or black (enum)
moveNumber: we don't need (just for ordering)
piece: enum
from: {col: turn a-h into 0-7, row: turn 1-8 into 0-7 }
to : {col: turn a-h into 0-7, row: turn 1-8 into 0-7 }
check: true or false
notation: required for validation (really???)
promotion: enum for piece
strike: true or false
disc: row or col, 0-7

TODO - en passant


pseudo-code!

a) setup initial data structures

	1) map of the board indicating which pieces on which squares (lookup)
	2) positions of pieces grouped by colour and type, plus initial / gained / lost


b) step through each move in order
c) update all positions, remove/add pieces if required













TODO - fix test files resolutions
TODO - fix type resolution
TODO - fix bug with input sizing for Days option



